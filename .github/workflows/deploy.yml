name: Deploy on Push

on:
  push:
    branches:
      - main  # 'main' 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions의 기본 실행 환경
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # GitHub 리포지토리에서 코드 가져오기

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}   # 서버 IP 주소
          username: ${{ secrets.SERVER_USER }}  # SSH 사용자명 (ex: ubuntu)
          key: ${{ secrets.SERVER_SSH_KEY }}  # GitHub Secrets에 저장한 SSH Key
          script: |
            cd ~/ara/ARA-dev
            git pull origin main  # 최신 코드 가져오기

             # .env 파일이 없으면 GitHub Secrets에서 가져와 생성
            echo "${{ secrets.SERVER_BACKEND_ENV }}" > backend/.env
            echo "${{ secrets.SERVER_LLM_ENV }}" > llm/.env
            
            docker-compose down  # 기존 컨테이너 중지
            docker-compose build --no-cache  # 새 컨테이너 빌드
            docker-compose up -d  # 컨테이너 실행
            docker system prune -f  # 필요없는 이미지 삭제
